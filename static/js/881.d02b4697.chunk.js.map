{"version":3,"file":"static/js/881.d02b4697.chunk.js","mappings":"uNAoBaA,EAAwC,SAAC,GAI/C,IAHLC,EAGI,EAHJA,UACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,GAAqBC,EAAAA,EAAAA,IAASC,EAAAA,IAC9BC,GAAwBF,EAAAA,EAAAA,IAASG,EAAAA,IAMvC,OAAKJ,GAKH,gBAAKK,UAAU,eAAf,UACE,iBACEA,UAAWC,GAAAA,CAAW,0BAA2B,CAC/CC,+BAAgCJ,IAFpC,WAKE,gBAAKE,UAAU,0CACf,iBAAKA,UAAU,gCAAf,WACE,wBAAKF,EAAwBJ,EAAe,wEAC5C,uBAAII,EAAwBL,EAAcD,QAE5C,mBAAQW,QApBE,YACdC,EAAAA,EAAAA,KAAiB,IAmBb,UACE,SAACC,EAAA,EAAD,WAhBC,O,mGCRX,UAjB6B,WAG3B,OAFAC,EAAAA,EAAAA,IAAQC,EAAAA,KAGN,SAAC,IAAD,CACEC,WAAW,SAAC,KAAD,IACXjB,cACE,SAAC,IAAD,CACEG,aAAa,4EACbD,YAAY,6LACZD,UAAU,iQ,6FCPPiB,EAAwC,SAAC,GAG/C,IAFLD,EAEI,EAFJA,UACAjB,EACI,EADJA,aAEA,OACE,iBAAKS,UAAU,YAAf,WACE,mBAAQA,UAAU,oBAAlB,UACE,SAACU,EAAA,EAAD,OAEF,iBAAMV,UAAU,kBAAhB,SAAmCQ,IAClCjB,GACD,SAACoB,EAAA,EAAD","sources":["entities/Notification/index.tsx","pages/PasswordRecoveryPage/index.tsx","shared/ui/templates/AuthTemplate/index.tsx"],"sourcesContent":["import React from \"react\";\nimport { useStore } from \"effector-react\";\nimport classnames from \"classnames\";\n\nimport { ReactComponent as Cross } from \"shared/images/Cross.svg\";\n\nimport {\n  $isShowNotification,\n  $isSuccessNotification,\n  showNotification,\n} from \"./model\";\nimport \"./style.scss\";\n\ninterface INotification {\n  textError: string;\n  titleSuccess: string;\n  textSuccess: string;\n}\n\n// Т.к есть валидация формы и нет сервера, то уведомление всегда будет успешным\nexport const Notification: React.FC<INotification> = ({\n  textError,\n  textSuccess,\n  titleSuccess,\n}) => {\n  const isShowNotification = useStore($isShowNotification);\n  const isSuccessNotification = useStore($isSuccessNotification);\n\n  const onClose = () => {\n    showNotification(false);\n  };\n\n  if (!isShowNotification) {\n    return null;\n  }\n\n  return (\n    <div className=\"notification\">\n      <div\n        className={classnames(\"notification__container\", {\n          notification__container_error: !isSuccessNotification,\n        })}\n      >\n        <div className=\"notification__container__message-img\" />\n        <div className=\"notification__container__text\">\n          <h4>{isSuccessNotification ? titleSuccess : \"Что-то не так...\"}</h4>\n          <p>{isSuccessNotification ? textSuccess : textError}</p>\n        </div>\n        <button onClick={onClose}>\n          <Cross />\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useGate } from \"effector-react\";\n\nimport { Notification } from \"entities/Notification\";\nimport { AuthTemplate } from \"shared/ui/templates\";\nimport { PasswordRecoveryForm } from \"widgets\";\nimport { ResizeGate } from \"features/resize/model\";\n\nconst PasswordRecoveryPage = () => {\n  useGate(ResizeGate);\n\n  return (\n    <AuthTemplate\n      mainBlock={<PasswordRecoveryForm />}\n      Notification={\n        <Notification\n          titleSuccess=\"Код отправлен\"\n          textSuccess=\"Код успешно отправлен на вашу почту!\"\n          textError=\"Не получилось отправить код. Попробуйте еще раз!\"\n        />\n      }\n    />\n  );\n};\n\nexport default PasswordRecoveryPage;\n","import React from \"react\";\n\nimport \"./style.scss\";\nimport { ReactComponent as Logo } from \"shared/images/Logo.svg\";\nimport { Footer } from \"shared/ui/Footer\";\n\ninterface IAuthTemplate {\n  mainBlock: React.ReactNode;\n  Notification?: React.ReactNode;\n}\n\nexport const AuthTemplate: React.FC<IAuthTemplate> = ({\n  mainBlock,\n  Notification,\n}) => {\n  return (\n    <div className=\"auth-page\">\n      <header className=\"auth-page__header\">\n        <Logo />\n      </header>\n      <main className=\"auth-page__main\">{mainBlock}</main>\n      {Notification}\n      <Footer />\n    </div>\n  );\n};\n"],"names":["Notification","textError","textSuccess","titleSuccess","isShowNotification","useStore","$isShowNotification","isSuccessNotification","$isSuccessNotification","className","classnames","notification__container_error","onClick","showNotification","Cross","useGate","ResizeGate","mainBlock","AuthTemplate","Logo","Footer"],"sourceRoot":""}